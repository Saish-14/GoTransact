basePath: /api
definitions:
  handlers.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.PostPaymentInput:
    properties:
      amount:
        type: string
      cardnumber:
        type: string
      cvv:
        type: string
      description:
        type: string
      expirydate:
        type: string
    required:
    - amount
    - cardnumber
    - cvv
    - expirydate
    type: object
  handlers.SignupUser:
    properties:
      company_name:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - company_name
    - email
    - first_name
    - last_name
    - password
    type: object
  utils.Response:
    properties:
      data:
        additionalProperties: true
        type: object
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for GoTransact.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: GoTransact API
  version: "1.0"
paths:
  /confirm-payment:
    get:
      consumes:
      - application/json
      description: Confirm payment by transaction ID and status
      parameters:
      - description: Transaction ID
        in: query
        name: transaction_id
        required: true
        type: string
      - description: Status
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Confirm a payment
      tags:
      - Transactions
  /login:
    post:
      consumes:
      - application/json
      description: User login
      parameters:
      - description: Login input
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
      summary: Login a user
      tags:
      - Auth
  /protected/logout:
    post:
      consumes:
      - application/json
      description: Logs out a user by invalidating their token
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Logged out successfully
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: Log out a user
      tags:
      - Auth
  /protected/post-payment:
    post:
      consumes:
      - application/json
      description: Create a new payment request with the provided details
      parameters:
      - description: Authorization header with bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Payment Request Input
        in: body
        name: paymentInput
        required: true
        schema:
          $ref: '#/definitions/handlers.PostPaymentInput'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created payment request
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: Create a new payment request
      tags:
      - Transactions
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.SignupUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Registers a new user
      tags:
      - accounts
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
